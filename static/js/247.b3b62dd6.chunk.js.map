{"version":3,"file":"static/js/247.b3b62dd6.chunk.js","mappings":"mTAGMA,EAAM,mCAECC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,gEACoCF,IAFlC,cACnBG,EADmB,yBAKlBA,EAASC,KAAKC,SALI,2CAAH,qDAUXC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBAC6CO,EAD7C,+CADM,cACvBJ,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfI,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBACoCT,EADpC,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfM,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CT,EAD5C,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,KAAKO,MALQ,2CAAH,sDAQfC,EAAe,mCAAG,WAAMH,GAAN,uFACNP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CT,EAD5C,2BADM,cACvBG,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,qD,6JClCfQ,EAAO,WAClB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QAER,GAAkCM,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAS,mCAAG,qGACGX,EAAAA,EAAAA,IAAgBD,GADnB,OACVL,EADU,OAGhBa,EAAab,GACbe,GAAa,GAJG,2CAAH,qDAOf,IACEE,GAGD,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACb,IAEAS,GACK,SAAC,IAAD,IAEJA,EAoBAA,GAAkC,IAArBF,EAAUS,YAA5B,GACS,yCAnBL,wBACGT,EAAUU,KAAI,SAAAC,GACb,IAAMC,EAAcD,EAAME,aAAN,0CACmBF,EAAME,cACzCC,EAAQ,GAEZ,OACE,2BACE,gBAAKC,IAAKH,EAAaI,MAAO,IAAKC,IAAI,MACvC,uBAAIN,EAAMO,QACV,wCAAgBP,EAAMQ,eAHfR,EAAMS,QAMlB,KAQR,EACD,W","sources":["api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://pixabay.com/api';\nconst KEY = '02bcb177375afb51516704bac2617151';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  //   return console.log(response.data.results);\n  return response.data.results;\n};\n\n// https: //api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  //   return console.log(response.data.results);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  // return console.log(response);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  // return console.log(response);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  // return console.log(response.data);\n  return response.data.results;\n};\n","import { getMovieCredits } from 'api';\nimport { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setiILoading] = useState(false);\n\n  useEffect(() => {\n    setiILoading(true);\n    const fetchData = async () => {\n      const data = await getMovieCredits(movieId);\n      // console.log(data);\n      setMovieCast(data);\n      setiILoading(false);\n    };\n\n    try {\n      fetchData();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n  if (!isLoading) {\n    return (\n      <ul>\n        {movieCast.map(actor => {\n          const actorUrlImg = actor.profile_path\n            ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n            : require('image/noImage.jpg');\n\n          return (\n            <li key={actor.cast_id}>\n              <img src={actorUrlImg} width={150} alt=\"\" />\n              <b>{actor.name}</b>\n              <p> Character: {actor.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  if (!isLoading && movieCast.length === 0) {\n    return <div>No results</div>;\n  }\n};\nexport default Cast;\n"],"names":["KEY","getTrending","axios","response","data","results","getSearchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Cast","useParams","useState","movieCast","setMovieCast","isLoading","setiILoading","useEffect","fetchData","error","console","log","length","map","actor","actorUrlImg","profile_path","require","src","width","alt","name","character","cast_id"],"sourceRoot":""}