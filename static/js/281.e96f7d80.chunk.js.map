{"version":3,"file":"static/js/281.e96f7d80.chunk.js","mappings":"yOAGMA,EAAM,mCAECC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,gEACoCF,IAFlC,cACnBG,EADmB,yBAKlBA,EAASC,KAAKC,SALI,2CAAH,qDAUXC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBAC6CO,EAD7C,+CADM,cACvBJ,EADuB,yBAKtBA,EAASC,MALa,2CAAH,qD,4JCZfI,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+F,SCfJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,WAAS,EACTC,KAAK,OACLH,MAAOA,EACPC,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAOL,MAAtB,MAIlB,ECdYM,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,wBACGA,EAAOC,KAAI,SAAAC,GACV,OAAO,wBAAoBA,EAAMC,OAAjBD,EAAME,GACvB,KAGN,E,oBCuCD,EAtCe,WAAO,IAAD,EACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAEhDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACG5B,EAAAA,EAAAA,GAAgByB,GADnB,OACV3B,EADU,OAEhB+B,QAAQC,IAAIhC,EAAKC,SACjBsB,EAAUvB,EAAKC,SAHC,2CAAH,qDAMf,IACE6B,GAGD,CAFC,MAAOG,GACPF,QAAQC,IAAIC,EACb,CACF,GAAE,CAACN,IAEJ,IAAMO,EAAgBjB,EAAOkB,QAAO,SAAAhB,GAClC,OAAIQ,GAA+B,KAAhBA,EACVR,EAEFA,EAAMiB,KAAKC,cAAcC,SAASX,EAAYU,cACtD,IAOD,OACE,6BACE,SAAC5B,EAAD,CAAWC,MAAOiB,EAAahB,SAPT,SAAAyB,GAExBV,EAD4B,KAATU,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,KAKG,SAACpB,EAAD,CAAWC,OAAQiB,MAGxB,C","sources":["api.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/MovieList/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://pixabay.com/api';\nconst KEY = '02bcb177375afb51516704bac2617151';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  //   return console.log(response.data.results);\n  return response.data.results;\n};\n\n// https: //api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  //   return console.log(response.data.results);\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Icon, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        autoFocus\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","export const MovieList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => {\n        return <li key={movie.id}>{movie.title}</li>;\n      })}\n    </ul>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n// import { getProducts } from 'fakeApi';\n// import { ProductList } from 'components/ProductList/ProductList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getSearchMovies } from 'api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchParam = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getSearchMovies(searchParam);\n      console.log(data.results);\n      setMovies(data.results);\n    };\n\n    try {\n      fetchData();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [searchParam]);\n\n  const visibleMovies = movies.filter(movie => {\n    if (searchParam || searchParam === '') {\n      return movie;\n    }\n    return movie.name.toLowerCase().includes(searchParam.toLowerCase());\n  });\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <SearchBox value={searchParam} onChange={updateQueryString} />\n      <MovieList movies={visibleMovies} />\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["KEY","getTrending","axios","response","data","results","getSearchMovies","query","Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","autoFocus","type","e","target","MovieList","movies","map","movie","title","id","useState","setMovies","useSearchParams","searchParams","setSearchParams","searchParam","get","useEffect","fetchData","console","log","error","visibleMovies","filter","name","toLowerCase","includes"],"sourceRoot":""}