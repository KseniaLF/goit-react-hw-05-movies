{"version":3,"file":"static/js/823.5058dfdd.chunk.js","mappings":"mTAGMA,EAAM,mCAECC,EAAW,mCAAG,WAAMC,GAAN,uFACFC,EAAAA,EAAAA,IAAA,kEACsCH,GAC3D,CACEI,OAAQF,EAAgBE,SAJH,cACnBC,EADmB,yBAQlBA,EAASC,KAAKC,SARI,2CAAH,sDAaXC,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,4DACgCH,EADhC,kBAC6CS,EAD7C,+CADM,cACvBJ,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfI,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,oBACoCX,EADpC,oBADM,cACvBK,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfM,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,4BAC4CX,EAD5C,oBADM,cACvBK,EADuB,yBAKtBA,EAASC,KAAKO,MALQ,2CAAH,sDAQfC,EAAe,mCAAG,WAAMH,GAAN,uFACNR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,4BAC4CX,EAD5C,2BADM,cACvBK,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,qD,sECrBfQ,E,QAAOC,GAAAA,GAAH,isB,0JCnBJC,EAAYD,EAAAA,GAAAA,IAAH,s5BAiDTE,EAAQF,EAAAA,GAAAA,GAAH,yF,mBC/CLG,EAAS,WACpB,OACE,iCACE,SAACD,EAAD,8BACA,SAACD,EAAD,WACE,SAAC,KAAD,CAAMG,GAAG,UAAT,UAKE,mDACsB,SAAC,MAAD,aAM/B,E,8BCjBYC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,UACGF,EAASG,KAAI,SAAAC,GACZ,IAAMC,EAAWD,EAAME,YAAN,0CACsBF,EAAME,aACzCC,EAAQ,GAEZ,OACE,yBACE,UAAC,KAAD,CAAMT,GAAE,iBAAYM,EAAMI,IAAMC,MAAO,CAAEC,KAAMT,GAA/C,WACE,gBAAKU,IAAKN,EAAUO,IAAKR,EAAMS,SAC/B,uBAAIT,EAAMS,YAHLT,EAAMI,GAOlB,KAGN,E,UCiBD,EApCa,WACX,OAAgCM,EAAAA,EAAAA,UAAS,IAAzC,eAAOd,EAAP,KAAiBe,EAAjB,KAEA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAMrC,EAAkB,IAAIuC,gBAEtBC,EAAS,mCAAG,qGACGzC,EAAAA,EAAAA,IAAYC,GADf,OACVI,EADU,OAGhB+B,EAAY/B,GACZiC,GAAa,GAJG,2CAAH,qDAOf,IACEG,GAGD,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CAED,OAAO,WAEN,CACF,GAAE,KAGD,6BACE,SAACxB,EAAD,IACCmB,IAAa,SAACQ,EAAA,EAAD,KACd,SAACzB,EAAD,CAAcC,SAAUA,MAG7B,C","sources":["api.jsx","components/TrendingList/TrendingList.styled.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/TrendingList/TrendingList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://pixabay.com/api';\nconst KEY = '02bcb177375afb51516704bac2617151';\n\nexport const getTrending = async abortController => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`,\n    {\n      signal: abortController.signal,\n    }\n  );\n  // console.log(abortController);\n  return response.data.results;\n};\n\n// https: //api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  //   return console.log(response.data.results);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  // return console.log(response);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  // return console.log(response);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  // return console.log(response.data);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\n// export const List = styled.ul`\n//   li {\n//     :before {\n//       //   content: '•'; /* Unicode-символ маркерной точки */\n//       content: '❤ ';\n//       color: orange;\n//       display: inline-block;\n//       width: 1em;\n//       /* margin-left: -1em; */\n//     }\n//   }\n// `;\n\n// export const List = styled.li({\n//   '&::before': {\n//     content: '❤',\n//   },\n// });\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, auto));\n  gap: 20px;\n\n  li {\n    :hover {\n      box-shadow: 0 0 10px orange;\n    }\n\n    /* padding: 20px; */\n    /* border: 2px solid orange; */\n    border-radius: 5px;\n    /* margin-bottom: 10px; */\n\n    /* :before {\n      content: '❤ ';\n      color: orange;\n      display: inline-block;\n      width: 2em;\n      margin-left: -1em;\n    } */\n\n    a {\n      text-decoration: none;\n      color: #212421;\n\n      :hover {\n        color: orange;\n      }\n    }\n    img {\n      border-radius: 5px 5px 0 0;\n    }\n\n    p {\n      padding: 10px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SearchBtn = styled.div`\n  a {\n    text-decoration: none;\n  }\n\n  /* button {\n    display: block;\n\n    margin: 0 auto;\n    margin-bottom: 10px;\n    background-color: #242124;\n    border: none;\n    padding: 15px 40px;\n    border-radius: 20px;\n    font-size: 17px;\n    color: #fff;\n    cursor: pointer;\n    transition: all 0.3s ease-out;\n\n    :hover {\n      background-color: orange;\n      box-shadow: 0px 5px 15px orange;\n    }\n  } */\n\n  div {\n    max-width: 200px;\n    margin: 0 auto;\n    margin-bottom: 10px;\n    text-align: center;\n\n    /* background-color: #242124; */\n    border: none;\n    padding: 15px 35px;\n    border-radius: 15px;\n    font-size: 17px;\n    font-weight: 500;\n    /* color: #242124; */\n    cursor: pointer;\n    transition: all 0.3s ease-out;\n\n    color: #fff;\n    background-color: orange;\n    :hover {\n      box-shadow: 0px 5px 15px orange;\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  color: orange;\n  margin-bottom: 10px;\n`;\n","import { Link } from 'react-router-dom';\nimport { SearchBtn, Title } from './Header.styled';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Header = () => {\n  return (\n    <>\n      <Title>Trending today</Title>\n      <SearchBtn>\n        <Link to=\"/movies\">\n          {/* <button type=\"button\">\n            <b> Find next movie now </b> <BiSearchAlt />\n          </button> */}\n\n          <div>\n            Find next movie now <BiSearchAlt />\n          </div>\n        </Link>\n      </SearchBtn>\n    </>\n  );\n};\n","import { List } from './TrendingList.styled';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ trending }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {trending.map(movie => {\n        const movieUrl = movie.poster_path\n          ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n          : require('image/noImage.jpg');\n\n        return (\n          <li key={movie.id}>\n            <Link to={`movies/${movie.id}`} state={{ from: location }}>\n              <img src={movieUrl} alt={movie.title} />\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","import { getTrending } from 'api';\nimport { Header } from 'components/Header/Header';\nimport { Loader } from 'components/Loader';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const abortController = new AbortController();\n\n    const fetchData = async () => {\n      const data = await getTrending(abortController);\n      // console.log(data);\n      setTrending(data);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchData();\n    } catch (error) {\n      console.log(error);\n    }\n\n    return () => {\n      // abortController.abort();\n    };\n  }, []);\n\n  return (\n    <main>\n      <Header />\n      {isLoading && <Loader />}\n      <TrendingList trending={trending} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["KEY","getTrending","abortController","axios","signal","response","data","results","getSearchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","List","styled","SearchBtn","Title","Header","to","TrendingList","trending","location","useLocation","map","movie","movieUrl","poster_path","require","id","state","from","src","alt","title","useState","setTrending","isLoading","setIsLoading","useEffect","AbortController","fetchData","error","console","log","Loader"],"sourceRoot":""}