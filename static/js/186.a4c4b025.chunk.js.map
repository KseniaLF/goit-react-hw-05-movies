{"version":3,"file":"static/js/186.a4c4b025.chunk.js","mappings":"mTAGMA,EAAM,mCAECC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,gEACoCF,IAFlC,cACnBG,EADmB,yBAKlBA,EAASC,KAAKC,SALI,2CAAH,qDAUXC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBAC6CO,EAD7C,+CADM,cACvBJ,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfI,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBACoCT,EADpC,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfM,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CT,EAD5C,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,KAAKO,MALQ,2CAAH,sDAQfC,EAAe,mCAAG,WAAMH,GAAN,uFACNP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CT,EAD5C,2BADM,cACvBG,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,qD,qJCnCfQ,EAAU,WACrB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QAER,GAAwCM,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACGP,EAAAA,EAAAA,IAAgBH,GADnB,OACVL,EADU,OAGhBa,EAAgBb,GAHA,2CAAH,qDAMf,IACEe,GAGD,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACX,IAEwB,IAAxBO,EAAaO,QACR,sEAIP,wBACGP,EAAaQ,KAAI,SAAAC,GAChB,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,KAGN,EAED,W","sources":["api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://pixabay.com/api';\nconst KEY = '02bcb177375afb51516704bac2617151';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  //   return console.log(response.data.results);\n  return response.data.results;\n};\n\n// https: //api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  //   return console.log(response.data.results);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  // return console.log(response);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  // return console.log(response);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  // return console.log(response.data);\n  return response.data.results;\n};\n","import { getMovieReviews } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getMovieReviews(movieId);\n      // console.log(data);\n      setMovieReviews(data);\n    };\n\n    try {\n      fetchData();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (movieReviews.length === 0) {\n    return <div>we dont have any reviews for this movie</div>;\n  }\n\n  return (\n    <ul>\n      {movieReviews.map(review => {\n        return (\n          <li key={review.id}>\n            <b>Author: {review.author}</b>\n            <p>{review.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","getTrending","axios","response","data","results","getSearchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Reviews","useParams","useState","movieReviews","setMovieReviews","useEffect","fetchData","error","console","log","length","map","review","author","content","id"],"sourceRoot":""}