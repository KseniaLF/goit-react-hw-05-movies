{"version":3,"file":"static/js/186.7751b142.chunk.js","mappings":"mTAGMA,EAAM,mCAECC,EAAW,mCAAG,8FAASC,EAAT,EAASA,OAAT,SACFC,EAAAA,EAAAA,IAAA,kEACsCH,GAC3D,CACEE,OAAAA,IAJqB,cACnBE,EADmB,yBAQlBA,EAASC,KAAKC,SARI,2CAAH,sDAaXC,EAAe,mCAAG,WAAOC,EAAP,mFAAgBN,EAAhB,EAAgBA,OAAhB,SACNC,EAAAA,EAAAA,IAAA,4DACgCH,EADhC,kBAC6CQ,EAD7C,8CAErB,CACEN,OAAAA,IAJyB,cACvBE,EADuB,yBAQtBA,EAASC,MARa,2CAAH,wDAWfI,EAAe,mCAAG,WAAOC,EAAP,mFAAkBR,EAAlB,EAAkBA,OAAlB,SACNC,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBACoCV,EADpC,mBAErB,CAAEE,OAAAA,IAHyB,cACvBE,EADuB,yBAMtBA,EAASC,MANa,2CAAH,wDASfM,EAAe,mCAAG,WAAOD,EAAP,mFAAkBR,EAAlB,EAAkBA,OAAlB,SACNC,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CV,EAD5C,mBAErB,CAAEE,OAAAA,IAHyB,cACvBE,EADuB,yBAMtBA,EAASC,KAAKO,MANQ,2CAAH,wDASfC,EAAe,mCAAG,WAAOH,EAAP,mFAAkBR,EAAlB,EAAkBA,OAAlB,SACNC,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CV,EAD5C,0BAErB,CAAEE,OAAAA,IAHyB,cACvBE,EADuB,yBAMtBA,EAASC,KAAKC,SANQ,2CAAH,uD,+JC1CfQ,EAAU,WACrB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QAER,GAAwCM,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAkB,IAAIC,gBAEtBC,EAAS,mCAAG,8GAEKX,EAAAA,EAAAA,IAAgBH,EAASY,GAF9B,OAERjB,EAFQ,OAIda,EAAgBb,GAChBe,GAAa,GALC,gDAOdK,QAAQC,IAAR,MAPc,yDAAH,qDAaf,OAFAF,IAEO,WACLF,EAAgBK,OACjB,CACF,GAAE,CAACjB,IAEAS,GACK,SAAC,IAAD,IAGJA,GAAqC,IAAxBF,EAAaW,OAe1BT,OAAL,GACS,sEAdL,wBACGF,EAAaY,KAAI,SAAAC,GAChB,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,KAQR,EAED,W","sources":["api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://pixabay.com/api';\nconst KEY = '02bcb177375afb51516704bac2617151';\n\nexport const getTrending = async ({ signal }) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`,\n    {\n      signal,\n    }\n  );\n  // console.log(abortController);\n  return response.data.results;\n};\n\n// https: //api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getSearchMovies = async (query, { signal }) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`,\n    {\n      signal,\n    }\n  );\n  //   return console.log(response.data.results);\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, { signal }) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`,\n    { signal }\n  );\n  // return console.log(response);\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, { signal }) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n    { signal }\n  );\n  // return console.log(response);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async (movieId, { signal }) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\n    { signal }\n  );\n  // return console.log(response.data);\n  return response.data.results;\n};\n","import { getMovieReviews } from 'api';\nimport { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setiILoading] = useState(false);\n\n  useEffect(() => {\n    setiILoading(true);\n    const abortController = new AbortController();\n\n    const fetchData = async () => {\n      try {\n        const data = await getMovieReviews(movieId, abortController);\n        // console.log(data);\n        setMovieReviews(data);\n        setiILoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!isLoading && movieReviews.length !== 0) {\n    return (\n      <ul>\n        {movieReviews.map(review => {\n          return (\n            <li key={review.id}>\n              <b>Author: {review.author}</b>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  if (!isLoading) {\n    return <div>We dont have any reviews for this movie</div>;\n  }\n};\n\nexport default Reviews;\n"],"names":["KEY","getTrending","signal","axios","response","data","results","getSearchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Reviews","useParams","useState","movieReviews","setMovieReviews","isLoading","setiILoading","useEffect","abortController","AbortController","fetchData","console","log","abort","length","map","review","author","content","id"],"sourceRoot":""}